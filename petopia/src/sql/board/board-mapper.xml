<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
<comment>게시판 관련 SQL문</comment>

<!-- 삭제되지 않은 총 게시글 수 보여주는 SQL -->
<entry key="selectListCount">
		SELECT
		      			COUNT(*)
		  FROM
		       			TB_BOARD
		 WHERE
		       			BOARD_STATUS = 'Y'
		
</entry>



<!-- 메인보드에서 게시글을 한페이지에 boardLimit만큼 보여주는  SQL -->
<entry key="selectList">
		<!-- rownum과 페이징처리 공부하기 -->						
		SELECT *
				  FROM (SELECT ROWNUM RNUM, A.*
				          FROM (SELECT 
						                       BOARD_NO,
												BOARD_TITLE,
												BOARD_VIEWS,
												BOARD_CREATE_DATE,
												USER_NO,
												FILE_IMG,
												CTG_NO,
												PET_CTG_NO
				                 FROM
												TB_BOARD
				                  JOIN
				                       			TB_CATEGORY USING(CTG_NO)
				                  JOIN 
				                       			TB_USER USING(USER_NO)
				             	WHERE 
												BOARD_STATUS = 'Y'	
				                 ORDER
				                    BY BOARD_CREATE_DATE DESC)   A)
				         WHERE 
				         				RNUM BETWEEN ? AND ?
		         

</entry>

<!-- 게시글 조회에 앞서 조회수카운팅이 선행되어야하므로 만들어진 SQL -->
<entry key="increaseViewCount">
	 	UPDATE
	 					TB_BOARD
	 		SET
	 					BOARD_VIEWS = BOARD_VIEWS + 1
	 	WHERE
	 					BOARD_NO = ?
	 		AND
	 					BOARD_STATUS = 'Y'

</entry>

<entry key="selectFile">
	<!--  	SELECT
		               FILE_NO,
		               REF_BNO,
		               ORIGINAL_NAME,
		               UPLOAD_NAME,
		               FILE_PATH,
		               FILE_LEVEL
		  FROM
		                TB_FILE
		   JOIN
		                TB_BOARD
		                        USING(FILE_NO)
		 WHERE
		                BOARD_STATUS = 'Y'
		    AND
		                BOARD_NO = ?-->
		                
		SELECT
		       FILE_NO,
		       REF_BNO,
		       ORIGINAL_NAME,
		       UPLOAD_NAME,
		       FILE_PATH,
		       FILE_LEVEL
		  FROM
		       TB_FILE A
		  JOIN
		       TB_BOARD B ON(B.BOARD_NO = A.REF_BNO)
		 WHERE
		       FILE_LEVEL = 1 <!-- 썸네일용 -->
		   AND
		       BOARD_STATUS = 'Y'
		   AND 
		   		BOARD_NO = ?
		 ORDER
		    BY
		       REF_BNO DESC
</entry>


<entry key="selectLikeCount">
		SELECT
		                COUNT(*)
		  FROM
		                TB_BOARD
		   JOIN
		                TB_LIKE
		                        USING(BOARD_NO)
		 WHERE
		                BOARD_STATUS = 'Y'
		    AND
		    			LIKE_YN = 'Y'
		    AND
		                BOARD_NO = ?
</entry>

<entry key="selectCategory">
		SELECT
		               	CTG_NO,
		               	CTG_NAME
		  FROM
		                TB_CATEGORY
		   JOIN
		                TB_BOARD
		                        USING(CTG_NO)
		 <!-- BOARD랑 조인했는데 WHERE에서 쓸 수 있음 <- 1.FROM, 2.WEHRE이니까 -->                       
		 WHERE
		                BOARD_STATUS = 'Y'
		    AND
		                BOARD_NO = ?
</entry>

<entry key="selectBoard">
		SELECT
		               	BOARD_NO,
		               	BOARD_TITLE,
		               	BOARD_CONTENT,
		               	BOARD_CREATE_DATE,
		               	USER_NO,
		               	FILE_IMG, <!-- 배열로 받아야하는데 => FOR문 쓰면 됨 -->
		           		LIKE_COUNT
		  FROM
		                TB_BOARD A
		   JOIN
		                TB_FILE B ON(A.BOARD_NO = B.REF_BNO)
		 <!-- BOARD랑 조인했는데 WHERE에서 쓸 수 있음 <- 1.FROM, 2.WEHRE이니까 -->                       
		 WHERE
		                BOARD_STATUS = 'Y'
		    AND
		                BOARD_NO = ?
</entry>

<!-- 게시글 수에 따른 유저등급관리 -->
<entry key="">
		UPDATE 
						TB_USER
		SET
						ROLE_ID = 'R1'
		WHERE 
						(
						SELECT 
									COUNT(*) 
						FROM 
									TB_BOARD 
						WHERE 
									USER_ID = ? 
						)  = ?
					
</entry>
<!-- 
최신글 순으로 정리된 게시글 수를 
시작페이지와 끝페이지의 페이징바를 통해 번호(개수)로 나타내고
한편, 조회된 리스트들을 보여주는 SQL
-->

</properties>